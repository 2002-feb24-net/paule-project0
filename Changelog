3/17/20
    Fixed serialization and deserialization. It was having a problem with private fields (needed public properties)
    Reversed direction of changelog (because who wants to see the newest stuff only after scrolling through the whole thing??)
    Cleaned up storecreator and storemanager
    store serialization and deserialization now implemented
    stocks (should) now also serialize and deserialize
    Stores will now display their menu when you choose store
    added periods to main menu.......... very important to document
    stores will now display their current stock for each of the topics
    fixed a bug with null arrays in the dictionary jsons
    made general store menu improvements
    can now check each topics individual stock, and when I put items in there, it will show the name, a description, and the price
        in addition you can add to you order, and remove it from the store's stock. (this needs to be changed because what if they change their mind!!)
    checking your order is only half implemented atm
    The 'shop' menu option is almost completed at this point. Need to use admin option to populate the shops. (NOT IMPLEMENTED)

3/16/20
    Added Serializer and deserializer
    Made a dictionary to represent stored data for every store
        now need to have the stores generate stock data, and admins to be able to add stock, buys take away stock
    Removed storestocker. Too redundant
    Added more fields to stock object, for better clarity and creation
    Put makenewuser into its own class. It is only one method, but it is long enough to be by itself
    renamed ManagerParent to IManagerParent
    Moved menu selection and related menu stuff to menu manager from main manager
    Added a constructor to main menu to makes passing in the managers easier
    Fixed code so it will at least compile and run (for now) (all the code that was causing errors has been commented out, its just not implemented yet)
    Moved password checker method to its own class from inputcollector
    Move menuoptionsdisplay into its own class, made it more flexible for the code
    There is a bug somewhere when serializing. 

3/13/20
    Started to expand store manager sections
        However, need stores implemented to check specific store's stock
    Started using storecreator
    Started initialization of stores
    Added a setCurrent method to manager parent, to for managers to set their currently selected person/stock/store ect for use
    Made more fields private
    Added a utility namespace
    added store stocker to utility


3/9/20
    Now asks for password after username
    Added initialization of existing users with manager and creator creation
    moved name and location list to creator for more logical code placement
    reworked some redundant method calling
    set many fields and references to private
    reworked person creation to personcreator, as well as the methods involved
    removed redundant managers
    began a menu system after logging in
        currently you can go to:
            store
            history
            account
            admin
            (or quit)
    started store menu and implementation

3/8/20
    Added stockcreator
    personcreator is now utilized
    planned out initialization of initial user base and info fields (not implemented yet)
    fixed bug with mainfile class name
    removed creatorparent
        creators are going to be too different from each other to have a parent class
        and if there was a parent class, method names would be too generic to have clear code
    added more blacklist words

3/7/20
    Created base framework
        creators, managers, objects, main, inputcollector
    Working username database
    working way to register
    working way to set password
        included many checks and failsafes
    bad word filter for usernames
    incomplete data fields for objects and managers
    many new methods for person manager, store manager, inputcollector, mainmanager
    added stock and stock manager
    just realized I didnt use the creators at all
        need to rewrite the code to include them or delete them
    heavy console based code in input collector and main manager
    build ends upon successfully entering a valid username